syntax = "proto3";

option go_package = "github.com/VegeWong/EnvManager-Go/protobuf/envmanager";

package manager;

service EnvManageRPC {
    rpc Check(Request) returns (Reply);
    rpc CreateEnv(EnvSchema) returns (CreateReply);
    rpc ResetEnv(stream ResetRequest) returns (stream EnvReply);
    rpc StepEnv(stream AgentDecision) returns (stream EnvReply);
    rpc CloseEnv(Request) returns (CloseReply);
}

message Request {}

message Reply {
    bool status = 1;
}

message EnvConfig {
    string map_name = 1;
    int64 num_threads = 2;
}


message EnvSchema {
    int64 base_id = 1;
    repeated EnvConfig configs = 2;
}   


message CreateReply {
    int64 end_id = 1;
    int64 status = 2;
}


message Array {
    int64 nbytes = 1;
    int64 dtype = 2;
    repeated int64 shapes = 3;
    bytes ndarray = 4;
}


message EnvArray {
    int64 env_id = 1;
    int64 time_steps = 2;
    string type = 3;
    bool done = 4;
    repeated Array array = 5;
}


message AgentDecision {
    EnvArray action = 1;
}


message EnvReply {
    EnvArray column = 1;
}

message ResetRequest {
    EnvArray request = 1;
}


message CloseRequest {
    repeated int64 close_ids = 1;
}

message CloseReply {
    repeated int64 closed_ids = 1;
    bool status = 2;
}

service DataBuffer {
    rpc Request(BlockDescription) returns (BlockReply);
    rpc Step(stream AgentDecision) returns (Reply);
}

message BlockDescription {
    int64 max_block_size = 1;
    int64 min_block_size = 2;
    int64 mode = 3;
}


message BlockReply {
    bool ready = 1;
    bool end = 2;
    repeated EnvArray columns = 3;
}
